/* 여러개의 선택자를 지정해서 css 하기 */
body,
h1,
p {
    margin: 0;
    padding: 0;
    /*텍스트와의 간격*/
}


/* 전체선택자 */
* {
    /* color: red; */
}

/* 태그선택자 */
h1 {
    /* background-color: yellow;
        margin-top: 30px;
        margin-left:30px; */
}

p {
    background-color: greenyellow;
}

/* 아이디 선택자 */
#title {
    /* font-size: 16px;  */
}

/* 클래스 선택자 */
.font_a {
    font-style: italic;
}

.font_b {
    font-weight: 100;
}

#header {
    background-color: red;
    color: white;
    width: 400px;
    /*div의 영역은 끝까지이기 때문에 width를 지정하면 가로 길이를 제한할 수 있다. */
    /* margin : 상하간격 좌우간격 */
    margin: 10px auto;
}

#aside {
    background-color: blue;
    color: white;
    width: 50%;
    /*화면 전체에서 반정도 차지함*/
}

#content {
    background-color: green;
    color: white;
    width: 200px;
}

.font_color_blue {
    color: blue;
}

li.back_color_green {
    background-color: green;
}

h1.back_color_green {
    background-color: green;
}

/* 속성 선택자 */
input[type] {
    width: 150px;
    height: 50px;
    font-size: 150%;
    /* 기본사이즈인 16px의 1.5배 크기이다. - 24px*/
}

input[type=text] {
    background-color: yellow;
}

input[type=password] {
    background-color: springgreen;
}

.img {
    width: 200px;
    height: 250px;
}

img[src$=jpg] {
    border: 3px solid red;
}

img[src$=png] {
    border: 5px solid blue;
}

img[src$=gif] {
    border: 5px solid black;
}

/* 후손선택자
부모선택 (공백) 선택자 */
#header1 h1 {
    color: red;
}

#section h1 {
    color: orange;
}

/* 자손선택자
부모선택>선택자 */
#header1>h1 {
    background-color: palegoldenrod;
}

#section>h1 {
    background-color: rosybrown;
}

#nav>h1 {
    /* 내가 응용함 */
    color: snow;
    background-color: slateblue;
}

/* 동위 선택자
기준 선택요소 뒤에 오는 요소를 선택
1. 바로 뒤에 위치하는 요소 선택
2. 뒤에 존재하는 요소를 선택 */
/* h1+h2{
    color:red;
} */

/* 바로 뒤에 위치하는 요소를 선택 : + */
#title1+h2 {
    /* title1 이 기준이 됨. */
    background-color: rebeccapurple;
}

#title1~h2 {
    /* header2-7은 기준 선택자와 다른 레벨에 있기 때문에 적용되지 않음. */
    background-color: skyblue;
}
/* [반응선택자] 선택영역에 마우스 커서가 위치하는 경우 -> :hover */
#btn00:hover{
    background-color: salmon;
    color:white;
}
#btn00:active{
    background-color: yellow;
    color:thistle;
}

h1>a:hover{
    color:mediumvioletred;
}

/* 입력양식 태그의 상태로 선택할 수 있다. */
input:disabled{
    background-color: black;
    color:mintcream;
}
/*
 input:enabled{  먼저 만들었던 버튼 양식에도 똑같이 적용됨. 
    width: 200px;
    height: 135px;
    font-size: 1.2em;
}
 */
input:focus{
    border: 5px solid red;
}
div.box{ /*enabled 주석처리 해야 보임*/
    width: 500px;
    height: 150px;
    border: 1px solid black;
}

#chk{
    display: none;
}
input[type=checkbox]:checked{ /* 클릭하면 체크표시 나옴. */
    width:50px;
    height:50px;
}
/* input[type=checkbox]:checked+div{ <!-- 클릭한 후 체크표시 나올 때 스타일이 반영됨.  -->
    background-color: blanchedalmond;
} */

/* <!-- 클릭하면 div부분 안보이게 하기--> */
input[type=checkbox]:checked+div{  
    
    height:0px;
    overflow:hidden;
}
input[type=checkbox]:checked+div{  
    display:none;
}


label{
    font-size: 200%;
    font-weight: bold;
}

ol{
    overflow:hidden;
    list-style: none;
}
ol>li{
    float:left;
    /* width:100px; */
    padding: 5px 30px;

}


ol>li:nth-child(2n){
    background-color: greenyellow;
}
ol>li:nth-child(2n+1){
    background-color: yellow;
}
/* 각진 모서리 둥글게 만들기 */
ol>li:first-child{
    border-radius: 10px 0 0 10px;
}
ol>li:last-child{
    border-radius: 0 10px 10px 0;
}
ol>li:hover {
    background-color: darkcyan;
    color: white;
    font-weight:bold;
}

a{
    text-decoration: none;
    color:sandybrown;
}
a:visited{
    color:sandybrown; /*링크 색 통일*/
}

a:hover{
    text-decoration: underline;
}